---
title: "prep"
format: html
editor_options: 
  chunk_output_type: console
---

## Initialize

Read in data and generate tidy tables and intersecting 

Per [Areas Under Restriction | Bureau of Ocean Energy Management](https://www.boem.gov/oil-gas-energy/leasing/areas-under-restriction), for the [Gulf of Mexico Presidential Withdrawals](https://www.boem.gov/oil-gas-energy/gom-planning-withdraw-areas):

> The portions of the Central Planning Area and Eastern Planning Area that are subject to the restrictions under GOMESA were further withdrawn until June 30, 2032, by Presidential Memorandum, dated September 8, 2020.

```{r}
#| label: prep

source(here::here("scripts/functions.R"))
source(here("scripts/paths.R"))

# read data ----
# transform all to geographic projection (4326)

if (!all(file.exists(c(
  study_geo, units_gpkg, ships_csv, whales_csv)))){
  
  # ships
  grid_ships <- read_sf(ships_shp) |> 
    select(grid_id) |> 
    st_transform(4326)
  
  # whales
  hex_whales <- read_sf(whales_shp) |> 
    rename(hex_id = HEXID) |> 
    clean_names() |> 
    st_transform(4326)
  
  # wind: BOEM wind energy planning areas
  # st_layers(wind_gdb)
  #                            layer_name geometry_type features fields crs_name
  # 1      BOEM_MHKLeasesandPlanningAreas Multi Polygon       17     21   WGS 84
  # 2         Wind_Lease_Outlines_02_2023 Multi Polygon       34     16   WGS 84
  # 3            BOEM_Wind_Leases_02_2023 Multi Polygon     3858     18   WGS 84
  # 4 Wind_Planning_Area_Outlines_04_2023 Multi Polygon       37      8   WGS 84
  # 5    BOEM_Wind_Planning_Areas_04_2023 Multi Polygon    13057     11   WGS 84
  # st_layers(wea_gdb)
  #   layer_name geometry_type features fields             crs_name
  # 1   Option_M       Polygon        1      6 NAD83 / Conus Albers
  # 2   Option_I       Polygon        1      6 NAD83 / Conus Albers
  ply_wea <- map(st_layers(wea_gdb)$name, \(lyr) read_sf(wea_gdb, lyr)) |> 
    bind_rows() |> 
    st_transform(4326)
  # mapview(ply_wea)
  
  #  <- tibble(
  #   layer = ) |> 
  #   mutate(
  #     geom = ) |> 
  #   st_as_sf()
  # 
  # ply_wea$geom[1]
  
  # read_sf(wea_gdb, "Option_M")
  # read_sf(wind_gdb, "Wind_Planning_Area_Outlines_04_2023") |> 
  #   st_drop_geometry() |> View()
  #   mapview()
  
  # study area ----
  # as intersection of all dissolved (st_union) inputs: whales, ships, eez
  if (!file.exists(study_geo)){
    # eez
    us_eez <- mr_features_get(
      type      = "MarineRegions:eez",
      featureID = "eez.281")  |>
      geojson_sf() |> 
      st_transform(4326) # mapview(us_eez)
    
    # intersect all
    ply_study <- st_union(grid_ships) |> 
      st_intersection(
        st_union(hex_whales)) |> 
      st_intersection(
        us_eez)
    
    # write geojson
    write_sf(ply_study, study_geo)
  }
  ply_study <- read_sf(study_geo)
  
  # break up study area into smaller polygons for faster intersecting
  sf_use_s2(F)
  plys_study <- st_subdivide(ply_study, 1000) |> 
    st_cast() |> 
    st_make_valid()
  sf_use_s2(T)
  stopifnot( sum(!st_is_valid(plys_study)) == 0)
  
  # cells: common raster output ----
  if (!all(file.exists(c(cells_geo)))){
    
    bb <- ply_study |> 
      st_transform(3857) |> 
      ext()
    # Roberts et al (2016b): # animals / 100 km^2
    # librarian::shelf(raster)
    # r <- raster(here("data/raw/whales/Duke_GOM_Brydes_whale/GOM_Brydes_whale_abundance.img"))
    # cellStats(r, "sum")
    # 44.16129 # confirmed Abundance = 44
    # raster::res(r) # 10000 10000
  
    r_cells <- rast(
      xmin   = bb$xmin, xmax = bb$xmax,
      ymin   = bb$ymin, ymax = bb$ymax,
      res    = 10 * 1000, # 10 km
      crs    = "epsg:3857", 
      extent = bb)
    names(r_cells) <- "cell_id"
    values(r_cells) <- cells(r_cells)
    # plet(r_cells, tiles = providers$Esri.OceanBasemap)
    
    # initiate rast_tif
    writeRaster(r_cells, rast_tif)
    
    sf_use_s2(F)
    ply_cells <- as.polygons(r_cells) |> 
      st_as_sf() |> 
      st_transform(4326) |> 
      st_filter(plys_study)
      
    ply_cells <- ply_cells |> 
      st_intersection( 
        plys_study) |> 
      group_by(
        cell_id) |> 
      summarize() |> 
      mutate( 
        area_km2 = st_area(geometry) |> set_units("km^2"))

    sf_use_s2(T)
    
    write_sf(ply_cells, cells_geo, delete_dsn = T)
  }
  r_cells   <- rast(rast_tif)["cell_id"]
  ply_cells <- read_sf(cells_geo)

  # whales: hex_id with non-NA value overlapping with study area (EEZ) ----
  if (!all(file.exists(c(whales_geo, whales_csv)))){
    
    tbl_whales_mo <- hex_whales |>  # 42,908 × 38
      st_filter(plys_study) |> 
      st_drop_geometry() |> 
      pivot_longer(
        !hex_id, 
        names_to  = "metric",
        values_to = "value") |> 
      filter(value != -9999) |> 
      separate_wider_delim(
        metric, "_", 
        names = c("month", "metric"))
    
    tbl_whales_avg <- tbl_whales_mo |> 
      group_by(
        hex_id, metric) |> 
      summarize(
        value = mean(value),
        .groups = "drop")
    
    tbl_whales <- bind_rows(
      tbl_whales_avg |> 
        mutate(
          timespan = "avg"),
      tbl_whales_mo |> 
        mutate(
          timespan = "month")) |> 
      select(hex_id, timespan, month, metric, value)
    
    sf_use_s2(F)
    ply_whales <- hex_whales |> 
      select(hex_id) |> 
      filter(hex_id %in% unique(tbl_whales_avg$hex_id)) |> 
      st_intersection(
        plys_study) |> 
      group_by(
        hex_id) |> 
      summarize() |> 
      mutate(
        area_km2 = st_area(geometry) |> set_units("km^2"))
    sf_use_s2(T)
    
    # add area_km2 to 
    d <- tbl_whales |> 
      filter(
        timespan == "avg",
        metric   == "n") |>
      select(hex_id, n = value) |> 
      left_join(
        ply_whales |> 
          st_drop_geometry(),
        by = "hex_id")
    # sum(d$whales)         #     120.605
    # mean(d$area_km2)      #      38.25817   [km^2]
    # sum(d$area_km2)       # 508,680.6       [km^2]
    # sum(d$whales_per_km2) #       3.10016 [1/km^2]  
    n_per_km2_avg <- mean(d$n)
    km2_avg       <- mean(d$area_km2)
    w_adj = n_whales_Garrison2020 / (n_per_km2_avg * km2_avg * nrow(d))  #  0.4325229
    
    # apply adjustment
    # tbl_whales_0 <- tbl_whales
    # tbl_whales <- tbl_whales_0
    tbl_whales <- tbl_whales |> 
      mutate(
        value = ifelse(
          metric == "n",
          value * w_adj,
          value),
        metric = ifelse(
          metric == "n",
          "n_per_km2",
          metric))

    d <- tbl_whales |> 
      filter(
        timespan == "avg",
        metric   == "n_per_km2") |>
      select(hex_id, n_per_km2 = value) |> 
      left_join(
        ply_whales |> 
          st_drop_geometry(),
        by = "hex_id") |> 
      mutate(
        n = n_per_km2 * area_km2)
    # sum(d$n) # 52.32669 # hmm... why not 51.3? presumably rounding error
    
    # check adjustment
    stopifnot(all.equal(
      mean(d$n_per_km2) * mean(d$area_km2) * nrow(d),
      n_whales_Garrison2020))
    
    write_csv(tbl_whales, whales_csv)
    write_sf(ply_whales, whales_geo, delete_dsn = T)
  }
  ply_whales <- read_sf(whales_geo)
  tbl_whales <- read_csv(whales_csv)
  
  # ships: grid_id of ships intersecting with whales, cells, eez ----
  if (!all(file.exists(c(ships_geo, ships_csv)))){
  
    sf_use_s2(F)
    ply_ships <- grid_ships |> 
      st_filter(plys_study) |>
      st_intersection(
        plys_study) |> 
      group_by(
        grid_id) |> 
      summarize() |> 
      mutate( 
        area_km2 = st_area(geometry) |> set_units("km^2"))
    sf_use_s2(T)
    write_sf(ply_ships, ships_geo, delete_dsn = T)

    tbl_ships_yr_mo <- read_excel(ships_xls) |> 
      filter(
        grid_id %in% unique(ply_ships$grid_id)) |> 
      pivot_longer(
        !c(yr, mo, grid_id),
        names_to = "metric",
        values_to = "value") |>
      filter(value > 0) |> 
      mutate(
        metric = str_replace(metric, "ihs_dist_km_sog_", ""))
    # table(tbl_ships_yr_mo$metric)
    #   all_gt01  all_gt10 boem_gt01 boem_gt10 
    #     236402    220567    191231    162695

    tbl_ships_yr <- tbl_ships_yr_mo |> 
      group_by(
        grid_id, yr, metric) |> 
      summarize(
        value = sum(value, na.rm=T),
        .groups = "drop")

    # check units and size
    # d_ck <- tbl_ships_yr |>
    #   filter(yr == 2018) |>
    #   group_by(metric) |>
    #   summarize(
    #     value = sum(value, na.rm=T),
    #     .groups = "drop")
    # d_ck |> filter(metric=="all_gt01") |> pull(value)
    # # 23,555,127 # vs Table 46: 24,582,837
    # d_ck |> filter(metric=="boem_gt01") |> pull(value)
    # # 10,044,213   # vs Table 46: 10,462,753
    # # makes sense a bit shaved off with EEZ
    # 
    # stk_rast["ships_2018_all_gt01"] |> 
    #   global("sum", na.rm=T) |> 
    #   pull(sum)
    # 33,703,993
    
    
    tbl_ships_avg <- tbl_ships_yr |> 
      group_by(
        grid_id, metric) |> 
      summarize(
        value = mean(value, na.rm=T),
        .groups = "drop")
    
    # check units and size
    # d_ck <- tbl_ships_avg |>
    #   group_by(metric) |>
    #   summarize(
    #     value = sum(value, na.rm=T),
    #     .groups = "drop")
    # d_ck |> filter(metric=="all_gt01") |> pull(value)
    # # 20,973,217 # vs Table 46: 21,870,071
    # d_ck |> filter(metric=="boem_gt01") |> pull(value)
    # # 9,124,393   # vs Table 46: 9,461,363
    # # makes sense a bit shaved off with EEZ
    # 
    # stk_rast["ships_avg_all_gt01"] |>
    #   global("sum", na.rm=T) |>
    #   pull(sum)
    # 30,665,453

    
    tbl_ships <- bind_rows(
      tbl_ships_avg |> 
        mutate(
          timespan = "avg"),
      tbl_ships_yr |> 
        mutate(
          timespan = "year"),
      tbl_ships_yr_mo |> 
        mutate(
          timespan = "year-month")) |> 
      select(grid_id, timespan, year = yr, month = mo, metric, value)
    write_csv(tbl_ships, ships_csv)
  }
  ply_ships <- read_sf(ships_geo)
  tbl_ships <- read_csv(ships_csv)

  # units: intersection of ships, whales, cells ----
  if (!file.exists(units_gpkg)){
    
    # ply_units: [(ships * whales) + (ships - whales)] * cells
    
    # turn off spherical geometry for faster intersections
    sf_use_s2(F) 
    
    ply_whales_ships <- ply_whales |> 
      select(hex_id) |> 
      st_intersection(
        ply_ships |> 
          select(grid_id))
      
    ply_ships_notwhales <- ply_ships |> 
      select(grid_id) |> 
      st_difference(
        st_union(ply_whales))
    
    ply_units <- bind_rows(
      ply_whales_ships,
      ply_ships_notwhales)
    
    ply_units <- ply_units |> 
      st_intersection(
        ply_cells |> 
          select(cell_id)) |>
      mutate(
        area_km2 = st_area(geometry) |> set_units("km^2"))
    
    sf_use_s2(T)
    
    write_sf(ply_units, units_gpkg, delete_dsn=T)
  }
  ply_units <- read_sf(units_gpkg)
}
```

## Whale Density

```{r}
lyr <- "whales_avg_n_per_100km2"
r0 <- calc_lyr(
    lyr,
    timespan == "avg" &
      metric   == "n_per_km2",
    redo = T)

# adjust cells so sum equals the reported number  
sum_r <- global(r0, "sum", na.rm=T)[[1]]        # 67.24308
avg_r <- global(r0, "mean", na.rm=T)[[1]]       # 0.01086318
n_r   <- length(values(r0, na.rm=T))            # 6,190
w_adj <- n_whales_Garrison2020 / (avg_r * n_r)  # 0.7629038
r <- r0 * w_adj

r <- add_lyr(r, lyr)
stopifnot(
  all.equal(
    global(r, "sum", na.rm=T)[[1]], 
    n_whales_Garrison2020))
```


## Depth Contours

100 & 400 m contour lines from GEBCO

```{r}
# read depth from GEBCO
r_depth <- rast(depth_tif) |> 
  mask(ply_study) * -1
names(r_depth) <- "depth_m"

if (!file.exists(depth_contours_geo)){
  brks = c(100, 400)
  lns_depth <- stars::st_contour(
    x = st_as_stars(r_depth), 
    breaks = brks,
    contour_lines = T) |>
    rename(
      depth_m = 1) |> 
    mutate(
      length_km = st_length(geometry) |> 
        set_units(km),
      depth_m   = factor(depth_m, ordered = T)) |> 
    arrange(desc(length_km))
  
  # confirm first two rows are enough and others are skippable fragments
  # mapView(
  #   lns_depth |> 
  #     filter(depth_m == 400) |> 
  #     slice(1),
  #     color="red", lwd=1) +
  # mapView(
  #   lns_depth |> 
  #     filter(depth_m == 400) |> 
  #     slice(-1),
  #     zcol="rowid", lwd=2)
  # 
  # mapView(
  #   lns_depth |> 
  #     filter(depth_m == 100) |> 
  #     slice(1),
  #     color="red", lwd=1) +
  # mapView(
  #   lns_depth |> 
  #     filter(depth_m == 100) |> 
  #     slice(-1),
  #     zcol="rowid", lwd=2)
  lns_depth <- head(lns_depth, 2)
  # mapView(lns_depth, zcol = "depth_m")
  write_sf(lns_depth, depth_contours_geo, delete_dsn=T)
}
lns_depth <- read_sf(depth_contours_geo)

```

## Whale Areas

- Bryde’s whale area (BioOp p. 292)
> This opinion defines the Bryde’s whale area to include the area from 100- to 400- meter isobaths from 87.5° W to 27.5° N as described in the status review (Rosel 2016) plus an additional 10 km around that area. The area designated in the status review was intended to “provide some buffer around the deeper water sightings and to include all sighting locations in the northeastern GOMx, respectively,” and was believed to be an area that the whales inhabit year round. The Bryde’s whale area for this opinion includes an outward expansion of 10 km around the area identified in the status review, for added protection of this extremely small population and accounting for ecological considerations.


- BIA. Bryde’s whale area (BioOp p. 292) on LeBrecque (2015) BIA: rationale to extend from 300 m to 400 m

> Bryde’s whales are found in tropical and subtropical waters worldwide and the smaller species are typically found in coastal and continental shelf waters. The Gulf of Mexico subspecies of Bryde’s whale is the only known baleen whale to inhabit the Gulf of Mexico year-round. These whales are consistently found in the northeastern Gulf of Mexico in the De Soto Canyon area between the 100 meter and 300 meter depth contours (Figure 22). Consequently, LaBrecque et al. (2015) designated this area as a Biologically Important Area (BIA). There have also been sightings at at deeper depths in this region and west of Pensacola, Florida; for this reason, the area predominantly inhabited by the species is probably better described out to the 400 meter depth contour and to Mobile Bay, Alabama, to provide some buffer around the deeper water sightings and to include all sighting locations in the northeastern Gulf of Mexico, respectively (Rosel 2016). Whaling records indicate the historical distribution of Bryde’s whales in the Gulf of Mexico was much broader than it is currently and included the north-central and southern Gulf of Mexico.


```{r}
# ply_bia ----
ply_bia <- read_sf(bia_shp, quiet = T) |> 
  filter(cmn_name == "Bryde's whale")
write_sf(ply_bia, bia_geo)

# get Whale Area from BioOp (wab) ----
r_lon <- init(r_depth, "x")
r_lat <- init(r_depth, "y")
r_wab <- (
  r_depth >= 100 &
  r_depth <= 400 & 
  r_lon >= -87.5 &
  r_lat >= 27.5) |> 
  classify(cbind(F, NA))
# plot(r_wab)

ply_wab <- as.polygons(r_wab) |> 
  st_as_sf() |> 
  rename(value = 1) |> 
  filter(value == 1) |> 
  st_cast("POLYGON") |> 
  mutate(
    area_km2 = st_area(geometry) |> set_units("km^2")) |> 
  arrange(desc(area_km2)) |> 
  head(1) |> 
  st_buffer(10*1000)
write_sf(ply_wab, wab_geo, delete_dsn=T)

r_wab <- ply_wab |> 
  st_transform(3857) |> 
  rasterize(r_cells, 1)
plet(r_wab, tiles=providers$Stamen.TonerLite)

lyr <- "whale_area_bioop"
names(r_wab) <- lyr
# remove old by writing new, moving
rast(rast_tif) |>
  subset(lyr, negate=T) |>
  writeRaster(here("data/rasters2.tif"))
file_delete(rast_tif)
file_move(here("data/rasters2.tif"), rast_tif)
writeRaster(r_wab, rast_tif, gdal="APPEND_SUBDATASET=YES")
stk_rast   <- rast(rast_tif)
# names(stk_rast)

# get Whale Area New (wan) ----
r_wan <- (
  r_depth >= 100 &
  r_depth <= 400 & 
  r_lat >= 25.5) |> 
  classify(cbind(F, NA))

ply_wan <- as.polygons(r_wan) |> 
  st_as_sf() |> 
  rename(value = 1) |> 
  filter(value == 1) |> 
  st_cast("POLYGON") |> 
  #st_buffer(10000) |> # skip for easier navigation
  mutate(
    area_km2 = st_area(geometry) |> set_units("km^2")) |> 
  arrange(desc(area_km2)) |> 
  head(1)
# mapView(ply_wab) + 
#   mapView(ply_wan) + 
#   mapView(ply_bia) + 
#   mapView(ply_whales01)
write_sf(ply_wan, wan_geo, delete_dsn = T)

r_wan <- ply_wan |> 
  st_transform(3857) |> 
  rasterize(r_cells, 1)
# plet(r_wan, tiles=providers$Stamen.TonerLite)
r_wan <- add_lyr(r_wan, "whale_area_new")

stk_rast   <- rast(rast_tif)
# names(stk_rast)

# map whale areas (bia, wab, wan) ----
# st_bbox(ply_bia)
#      xmin      ymin      xmax      ymax 
# -87.33637  26.60257 -84.05503  30.06229
```


```{r}
r_whales <- stk_rast["whales_avg_n_per_100km2"]

tbl_whales_nxarea <- tibble(
  n_whales_gom = r_whales |>
    global("sum", na.rm=T) |> 
    pull(sum),
  n_whales_wab = r_whales |>
    mask(stk_rast["whale_area_bioop"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_whales_wab = n_whales_wab / n_whales_gom,
  n_whales_wan = r_whales |>
    mask(stk_rast["whale_area_new"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_whales_wan = n_whales_wan / n_whales_gom)

write_csv(tbl_whales_nxarea, whales_n_by_area_csv)
```


```{r}
#| label: old_boem_other
#| eval: false

# * [Geographic Mapping Data in Digital Format](https://www.data.boem.gov/Main/Mapping.aspx)
# /Users/bbest/Github/ecoquants/ricei/data/raw/boem/FedStateBoundary.gdb

# [Geographic Mapping Data in Digital Format](https://www.data.boem.gov/Main/Mapping.aspx)
ppa_shp <- glue("{dir_raw}/boem/Gom_5yr_2019_2024/2019-2024DPPAreas_GOM.shp")
ply_ppa <- read_sf(ppa_shp)
ply_ppa
mapView(ply_ppa)

withdraw_gdb <- glue("{dir_raw}/boem/Withdraw2021.gdb")
st_layers(withdraw_gdb)

ply_withdraw <- read_sf(withdraw_gdb, "BOEM_OCS_Areas_Withdrawn_from_Leasing") |> 
  st_make_valid() |> 
  st_transform(4326)

mapview(ply_withdraw)

onmsR::sanctuaries
```


```{r}
#| label: old_threshold_skip
#| 
lyr <- "whales_avg_n_per_100km2"
d <- values(stk_rast[lyr], na.rm=T, dataframe=T) |> 
  rename(v = 1)
sum(d$v)       # 51.3
sum(d$v) * 0.9 # 46.17

# threshold q to capture 50 animals
q <- d |> 
  arrange(desc(v)) |> 
  mutate(
    v_cum = cumsum(v)) |> 
  filter(
    v_cum >= sum(d$v) * 0.90) |> 
  head(1) |> 
  pull(v)
q # 50: 0.0506589; 90%: 0.03161609

r_wq <- stk_rast[lyr] >= q
r_wq <- mask(r_wq, r_wq, maskvalues=F) |> 
  trim()
ply_wq <- as.polygons(r_wq) |> 
  st_as_sf() |> 
  st_buffer(10*1000) |> 
  st_cast("POLYGON") |> 
  mutate(
    area_km2 = st_area(geometry) |> set_units(km^2)) |> 
  arrange(desc(area_km2)) |> 
  head(1)
mapView(ply_wq)
ply_wq |> 
  st_transform(4326) |> 
  st_bbox()
#      xmin      ymin      xmax      ymax 
# -96.60060  25.38504 -84.20385  29.99659  
# 25.5

# OLD: plot whale densities wrt depth and latitude ----

# get depth in same crs as stk_rast
r_d <- r_depth |>
  project(stk_rast[lyr], "average")
plet(r_d, col="Spectral", tiles=providers$Stamen.TonerLite)

d_ndy <- values(c(stk_rast[lyr], r_d), dataframe=T) |> 
  cbind(
    init(r_d, "y") |> 
      as.points() |> 
      st_as_sf() |> 
      st_transform(4326) |> 
      st_coordinates() |> 
      (\(.) .[,"Y"])()) |> 
  rename(n=1,d=2,y=3) |> 
  tibble() |> # nrow(d_ndy): 16,878
  na.omit()   # nrow(d_ndy):  6,164
sum(d_ndy$n)  # 60.44093

d_ndy |> 
  filter(n>=q) |> 
  with(plot(d,n))

# d_ndy_0 <- d_ndy
# d_ndy <- d_ndy_0
d_ndy_1 <- d_ndy |> 
  arrange(desc(n)) |> 
  filter(
    !is.na(n),
    !is.na(d),
    n > 0.0001)
  # head(100)
nrow(d_ndy_1)   # 1,511
sum(d_ndy_1$n)  #    60.38159

ggplot(d_ndy_1, aes(x=d, weight=n)) + 
  geom_density(fill="gray") +
  theme_light() +
  ggplot2::geom_vline(xintercept = 100, color = "blue") + 
  ggplot2::geom_vline(xintercept = 300, color = "red") +
  ggplot2::geom_vline(xintercept = 400, color = "blue") +
  xlim(0, 1000) +
  labs(
    x = "Depth (m)",
    y = "Whales (density)")

d_ndy_2a <- d_ndy_1 |> 
  filter(
    d >= 100,
    d <= 300)
nrow(d_ndy_2a)   # 805
sum(d_ndy_2a$n)  #  47.55223

d_ndy_2 <- d_ndy_1 |> 
  filter(
    d >= 100,
    d <= 400)
nrow(d_ndy_2)   # 994
sum(d_ndy_2$n)  #  58.50941

d_ndy_2 |> 
  ggplot(aes(x=y, weight=n)) + 
  geom_density(fill="gray") +
  theme_light() +
  geom_vline(xintercept = 27.5, color = "red") +
  geom_vline(xintercept = 25.5, color = "blue") +
  labs(
    x = "Latitude (º)",
    y = "Whales (density)")
sum(d_ndy$n) # 60.38159

d_ndy_3a <- d_ndy_2 |> 
  filter(
    y >= 27.5)
nrow(d_ndy_3a)   # 609
sum(d_ndy_3a$n)  #  46.81478

d_ndy_3 <- d_ndy_2 |> 
  filter(
    y >= 25.5)
nrow(d_ndy_3)   # 994
sum(d_ndy_3$n)  #  57.43964
```


## Vessel Traffic

### OLD

::: {.panel-tabset}

#### Figure 56 (ships-all)

![Figure 56. Vessel Traffic in the Gulf of Mexico. Data represent annual average kilometers (km) of vessel traffic from all vessels based on AIS data from 2014-2018](BioOp/Figures/Figure56_ships-all-gt01.jpg)

#### Figure 57 (ships-boem)

![Figure 57. Oil and Gas Vessel Traffic in the Gulf of Mexico. Data represent annual average kilometers (km) of vessel traffic from oil and gas related vessels based on AIS data from 2014-2018.](BioOp/Figures/Figure57_ships-boem-gt01.jpg)
:::


### NEW

```{r}

# tbl_ships |> 
#   select(metric, timespan) |> 
#   table()
#            timespan
# metric         avg   year year-month
#   all_gt01    5519  21860     236402
#   all_gt10    5437  21230     220567
#   boem_gt01   5502  21546     191231
#   boem_gt10   5372  20092     162695
#
# tbl_ships |> 
#   select(metric, year) |> 
#   table()
#           year
# metric       2015  2016  2017  2018
#   all_gt01  64262 64874 64521 64605
#   all_gt10  60707 60655 60155 60280
#   boem_gt01 53229 52914 53927 52707
#   boem_gt10 46747 45523 45791 44726

lyr_whales <- "whales_avg_n_per_100km2"
for (m in unique(tbl_ships$metric)){  # m = unique(tbl_ships$metric)[1] 
  # m ="boem_gt10"
  # m ="all_gt01"
  
  # ships average
  lyr <- glue("ships_avg_{m}")
  message(lyr)
  
  r <- calc_lyr(
    lyr,
    timespan == "avg" & 
      metric == !!m,
    redo = T)
  
  if (m == "all_gt01"){
    true_sum_all_gt01 <- 20973217 # 20,973,217
    adj_r <- true_sum_all_gt01 / global(r, "sum", na.rm=T) |> pull(sum)
  }
  # global(stk_rast["ships_avg_all_gt01"], "sum", na.rm=T) |> pull(sum) |> format(big.mark=",")
  
  # apply adjustment
  r_rsk <- add_lyr(
    r * adj_r,
    lyr)
  stk_rast <- rast(rast_tif)
  
  # risk average
  lyr_risk <- glue("risk_avg_{m}")
  message(lyr_risk)
  
  r_rsk <- add_lyr(
    stk_rast[lyr] * stk_rast[lyr_whales],
    lyr_risk)
  stk_rast <- rast(rast_tif)
  
  # by year
  for (yr in 2015:2018){  # yr = 2018
    
    # ship year
    lyr <- glue("ships_{yr}_{m}")
    message(lyr)
  
    r <- calc_lyr(
      lyr,
      timespan == "year" & 
        year   == !!yr &
        metric == !!m,
      redo = T) * adj_r
    # global(r, "sum", na.rm=T) |> pull(sum) |> format(big.mark=",")

    # apply adjustment
    stk_rast <- rast(rast_tif)
    r_rsk <- add_lyr(
      r * adj_r,
      lyr)
    stk_rast <- rast(rast_tif)
    
    # risk year
    lyr_risk <- glue("risk_{yr}_{m}")
    message(lyr_risk)
    
    r_rsk <- add_lyr(
      stk_rast[lyr] * stk_rast[lyr_whales],
      lyr_risk)
    stk_rast <- rast(rast_tif)
  }
}
```


```{r}
stk_rast <- rast(rast_tif)
# names(stk_rast) |> sort()

yrs <- 2015:2018
tbl_ships_overview <- tibble(
  yr  = c(yrs, "Mean"),
  ships_all_gt01  = c(
    stk_rast |> 
      subset(glue("ships_{yrs}_all_gt01")) |> 
      global("sum", na.rm=T) |> 
      pull(sum),
    stk_rast["ships_avg_all_gt01"] |> 
      global("sum", na.rm=T) |> 
      pull(sum)),
  ships_boem_gt01 = c(
    stk_rast |> 
      subset(glue("ships_{yrs}_boem_gt01")) |> 
      global("sum", na.rm=T) |> 
      pull(sum),
    stk_rast["ships_avg_boem_gt01"] |> 
      global("sum", na.rm=T) |> 
      pull(sum)),
  pct_boem_gt01  = ships_boem_gt01 / ships_all_gt01,
  ships_all_gt10  = c(
    stk_rast |> 
      subset(glue("ships_{yrs}_all_gt10")) |> 
      global("sum", na.rm=T) |> 
      pull(sum),
    stk_rast["ships_avg_all_gt10"] |> 
      global("sum", na.rm=T) |> 
      pull(sum)),
  ships_boem_gt10 = c(
    stk_rast |> 
      subset(glue("ships_{yrs}_boem_gt10")) |> 
      global("sum", na.rm=T) |> 
      pull(sum),
    stk_rast["ships_avg_boem_gt10"] |> 
      global("sum", na.rm=T) |> 
      pull(sum)),
  pct_boem_gt10  = ships_boem_gt10 / ships_all_gt10)
View(tbl_ships_overview)

write_csv(tbl_ships_overview, ships_overview_csv)
```


```{r}
#| label: ships_avg_all_gt01
#| fig-cap: "Map of annual average traffic (km) for all vessel types from AIS data."

map_rast(stk_rast["ships_avg_all_gt01"], "ships, <br> annual avg,<br>all types <small>(km)</small>", "RdYlGn")
```

#### ships-all-ply check

Original BioOp map probably had a "stretched" color ramp, since features match more when I transform, e.g. $√km$.

```{r}

# require(classInt)

ply <- ply_ships |> 
  left_join(
    tbl_ships |> 
      filter(
        timespan == "avg",
        metric   == "all_gt01") |> 
      select(
        grid_id, 
        val = value) |> 
      mutate(
        val = val^(1/2)),
    by = "grid_id") |> 
  filter(!is.na(val))

# hist(log(ply$val))
# range(ply$val, na.rm = T)
# v <- seq(0.8500542, 2.7153631, length.out=100)
# plot(v, v^(0.01))
# 
# brks = classIntervals(na.omit(ply$val), n = 7, style = 'jenks')$brks

# hist(ply$val)

map_ply_val(ply,"Traffic, all (km)", "Traffic,<br><small>all types,<br>all speeds,<br>avg year<br>(√km)</small>", "RdYlGn")
```

```{r}
r <- add_lyr(
  stk_rast["ships_avg_boem_gt01"] / stk_rast["ships_avg_all_gt01"],
  "ships_pct_boem_avg_gt01")
stk_rast <- rast(rast_tif)


map_rast(
  stk_rast["ships_pct_boem_avg_gt01"], 
  "% vessel traffic,<br>oil & gas,<br>all speeds,<br><small>annual avg<br>(km)</small>", "RdYlGn")
```

<!-- How are there values in excess of 1? -->

## Vessel Risk to Whales

### OLD

::: {.panel-tabset}

#### Figure 63 (risk-boem-all)

![Figure 63. Relative vessel strike risk to Bryde’s whales from oil and gas vessel traffic of all speeds.](BioOp/Figures/Figure63_risk-boem-gt01.jpg)

#### Figure 64 (risk-boem-gt10)

![Figure 64. Relative vessel strike risk to Bryde’s whales from oil and gas vessel traffic greater than 10 knots.](BioOp/Figures/Figure64_risk-boem-gt10.jpg)

#### Table 49 (strike-risk_by-ship-type-years)

![Table 49. Vessel strike risk of Bryde’s whales associated with oil and gas vessel traffic.](BioOp/Tables/Table49-strike-risk.jpg)

#### Table 50 (strike-risk_with-whale-area)

![Table 50. Vessel strike risk of Bryde’s whales associated with oil and gas vessel traffic accounting for the proposed RPA Bryde’s whale mitigation in Section 14.](BioOp/Tables/Table50-strike-risk_whale-area.jpg)

#### Table 51 (strike-risk_within-whale-area)

![Table 51. Percent vessel strike risk of Bryde’s whales associated with oil and gas vessel traffic of all speeds within the Bryde’s whale mitigation area.](BioOp/Tables/Table51-strike-risk_within-whale-area.jpg)


:::

### NEW

Table 49. Risk Overview

```{r}
stk_rast <- rast(rast_tif)
# names(stk_rast) |> sort()

yrs <- 2015:2018
d <- tibble(
  yr                = yrs,
  risk_all_gt01  = stk_rast |> 
    subset(glue("risk_{yrs}_all_gt01")) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  risk_boem_gt01 = stk_rast |> 
    subset(glue("risk_{yrs}_boem_gt01")) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_boem_gt01  = risk_boem_gt01 / risk_all_gt01,
  risk_all_gt10  = stk_rast |> 
    subset(glue("risk_{yrs}_all_gt10")) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  risk_boem_gt10 = stk_rast |> 
    subset(glue("risk_{yrs}_boem_gt10")) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_boem_gt10  = risk_boem_gt10 / risk_all_gt10)

write_csv(d, risk_overview_csv)
# tbl_49[4,2]
# 214,477 # vs BioOp: 61,024

```

```{r}
#| label: risk_reduction_by_areas_csv

d <- tibble(
  yr                = yrs,
  risk_all_gt10  = stk_rast |> 
    subset(glue("risk_{yrs}_all_gt10")) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  risk_boem_gt10 = stk_rast |> 
    subset(glue("risk_{yrs}_boem_gt10")) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_boem_gt10     = risk_boem_gt10 / risk_all_gt10,
  risk_all_gt01  = stk_rast |> 
    subset(glue("risk_{yrs}_all_gt01")) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  risk_boem_gt01 = stk_rast |> 
    subset(glue("risk_{yrs}_boem_gt01")) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_boem_gt01     = risk_boem_gt01 / risk_all_gt01,
  risk_boem_gt10_wab = stk_rast |> 
    subset(glue("risk_{yrs}_boem_gt10")) |>
    mask(stk_rast["whale_area_bioop"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_risk_reduced_boem_gt10_wab = risk_boem_gt10_wab / risk_all_gt10,
  risk_boem_gt10_wan = stk_rast |> 
    subset(glue("risk_{yrs}_boem_gt10")) |>
    mask(stk_rast["whale_area_new"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_risk_reduced_boem_gt10_wan = risk_boem_gt10_wan / risk_all_gt10,
  # all Whale Area BioOp risk (reduced if enacted)
  risk_all_gt10_wab = stk_rast |> 
    subset(glue("risk_{yrs}_all_gt10")) |>
    mask(stk_rast["whale_area_bioop"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_risk_reduced_all_gt10_wab = risk_all_gt10_wab / risk_all_gt10,
  # all Whale Area New risk (reduced if enacted)
  risk_all_gt10_wan = stk_rast |> 
    subset(glue("risk_{yrs}_all_gt10")) |>
    mask(stk_rast["whale_area_new"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_risk_reduced_all_gt10_wan = risk_all_gt10_wan / risk_all_gt10,
  # Whale Area BioOp risk (reduced if enacted)
  risk_boem_gt01_wab = stk_rast |> 
    subset(glue("risk_{yrs}_boem_gt01")) |>
    mask(stk_rast["whale_area_bioop"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_risk_reduced_boem_gt01_wab = risk_boem_gt01_wab / risk_all_gt01,
  # Whale Area New risk (reduced if enacted)
  risk_boem_gt01_wan = stk_rast |> 
    subset(glue("risk_{yrs}_boem_gt01")) |>
    mask(stk_rast["whale_area_new"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_risk_reduced_boem_gt01_wan = risk_boem_gt01_wan / risk_all_gt01,
  # all Whale Area BioOp risk reduced if enacted on all types
  risk_all_gt01_wab = stk_rast |> 
    subset(glue("risk_{yrs}_all_gt01")) |>
    mask(stk_rast["whale_area_bioop"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_risk_reduced_all_gt01_wab = risk_all_gt01_wab / risk_all_gt01,
  # all Whale Area New risk (reduced if enacted)
  risk_all_gt01_wan = stk_rast |> 
    subset(glue("risk_{yrs}_all_gt01")) |>
    mask(stk_rast["whale_area_new"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_risk_reduced_all_gt01_wan = risk_all_gt01_wan / risk_all_gt01)
  
write_csv(d, risk_reduction_by_areas_csv)
```


#### tbl_51

```{r}

names(stk_rast) |> sort()

tbl_51 <- tibble(
  yr                = yrs,
  risk_all_gt10_wab  = stk_rast |> 
    subset(glue("risk_{yrs}_all_gt10")) |> 
    mask(stk_rast["whale_area_bioop"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  risk_boem_gt10_wab = stk_rast |> 
    subset(glue("risk_{yrs}_boem_gt10")) |> 
    mask(stk_rast["whale_area_bioop"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_boem_gt10_wab = risk_boem_gt10_wab / risk_all_gt10_wab,
  
  risk_all_gt10_wan  = stk_rast |> 
    subset(glue("risk_{yrs}_all_gt10")) |> 
    mask(stk_rast["whale_area_new"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  risk_boem_gt10_wan = stk_rast |> 
    subset(glue("risk_{yrs}_boem_gt10")) |> 
    mask(stk_rast["whale_area_new"]) |> 
    global("sum", na.rm=T) |> 
    pull(sum),
  pct_boem_gt10_wan = risk_boem_gt10_wan / risk_all_gt10_wan)
  
tbl_51_csv <- here("data/BioOp_tbl51_new.csv")
write_csv(tbl_51, tbl_51_csv)

tbl_51 <- read_csv(tbl_51_csv)
kable(tbl_51)
```


```{r}
#| label: ships_wide_gpkg

ships_wide_gpkg <- here("data/ships_wide.gpkg")
ships_alb_tif <- here("data/ships_alb.tif")

ply_ships <- read_sf(ships_shp) |> 
  select(grid_id)
tbl_ships <- read_csv(ships_csv)

d_ships_w <- tbl_ships |> 
  filter(
    is.na(month)) |> 
  rowwise() |> 
  mutate(
    col_year = ifelse(!is.na(year), glue("_{year}"), ""),
    col_wide = glue("{metric}_{timespan}{col_year}")) |> 
  select(grid_id, col_wide, value) |> 
  pivot_wider(
    names_from = col_wide,
    values_from = value)
# ply_ships_w <- ply_ships |> 
  
ply_ships_w <- ply_ships |> 
  left_join(
    d_ships_w,
    by = "grid_id")
write_sf(ply_ships_w, ships_wide_gpkg)

st_bbox(ply_ships_w)

ply_ships_w <- ply_ships_w |> 
  mutate(
    area_km2 = st_area(geometry) |> set_units(km^2))

all_gt01_avg
terra::rasterize(ply_ships_w, field="all_gt01_avg")

range(ply_ships_w$area_km2)
# 120.6014 131.3593
st_area(ply_ships_w)
```

